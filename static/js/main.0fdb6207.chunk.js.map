{"version":3,"sources":["components/Info/Info.jsx","components/Form/Form.jsx","components/Forecast/Forecast.jsx","components/Weather/Weather.jsx","App.js","serviceWorker.js","index.js"],"names":["Info","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","Component","Form","onSubmit","props","gettingWeather","type","name","placeholder","Forecast","_this$props","tempOneDayLater","tempTwoDaysLater","tempThreeDaysLater","preventDefaultState","toFixed","Button","variant","onClick","Weather","temp","city","country","pressure","sunset","error","gettingForecast","Forecast_Forecast","apiKey","App","state","undefined","preasure","_this","setState","_callee","e","response","data","date","sunsetDate","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","fetch","concat","sent","json","sys","Date","setTime","getHours","getMinutes","main","stop","_callee2","_context2","list","Info_Info_Info","Form_Form_Form","Weather_Weather_Weather","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mVAGaA,eAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEE,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,qBAJJhB,EAAA,CAA0BiB,cCAbC,SAAb,SAAAjB,GAAA,SAAAiB,IAAA,OAAAhB,OAAAC,EAAA,EAAAD,CAAAE,KAAAc,GAAAhB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgB,GAAAX,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAgB,EAAAjB,GAAAC,OAAAQ,EAAA,EAAAR,CAAAgB,EAAA,EAAAP,IAAA,SAAAC,MAAA,WAEE,OACCC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAOG,SAAUf,KAAKgB,MAAMC,gBAC3CR,EAAAC,EAAAC,cAAA,SAAOO,KAAK,OAAOC,KAAK,OAAOC,YAAY,kBAAkBR,UAAU,gBACvEH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBALtBE,EAAA,CAA0BD,8BCAbQ,EAAb,SAAAxB,GAAA,SAAAwB,IAAA,OAAAvB,OAAAC,EAAA,EAAAD,CAAAE,KAAAqB,GAAAvB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuB,GAAAlB,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAuB,EAAAxB,GAAAC,OAAAQ,EAAA,EAAAR,CAAAuB,EAAA,EAAAd,IAAA,SAAAC,MAAA,WACU,IAAAc,EAC+EtB,KAAKgB,MAApFO,EADAD,EACAC,gBAAiBC,EADjBF,EACiBE,iBAAkBC,EADnCH,EACmCG,mBAAoBC,EADvDJ,EACuDI,oBAE/D,OACCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbW,GACAd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACdH,EAAAC,EAAAC,cAAA,kCAA0BY,GAAmBA,EAAgBI,QAAQ,GAArE,SACAlB,EAAAC,EAAAC,cAAA,wCAAgCa,GAAoBA,EAAiBG,QAAQ,GAA7E,SACAlB,EAAAC,EAAAC,cAAA,yCAAiCc,GAAsBA,EAAmBE,QAAQ,GAAlF,SACAlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAASJ,GAAlC,eAXNL,EAAA,CAA8BR,aCEjBkB,EAAb,SAAAlC,GAAA,SAAAkC,IAAA,OAAAjC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+B,GAAAjC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiC,GAAA5B,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAiC,EAAAlC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAiC,EAAA,EAAAxB,IAAA,SAAAC,MAAA,WACU,IAAAc,EAC8ItB,KAAKgB,MAAnJgB,EADAV,EACAU,KAAMC,EADNX,EACMW,KAAMC,EADZZ,EACYY,QAASC,EADrBb,EACqBa,SAAUC,EAD/Bd,EAC+Bc,OAAQC,EADvCf,EACuCe,MAAOC,EAD9ChB,EAC8CgB,gBAAiBf,EAD/DD,EAC+DC,gBAAiBC,EADhFF,EACgFE,iBAAkBC,EADlGH,EACkGG,mBAAoBC,EADtHJ,EACsHI,oBAE9H,OACCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbqB,GACAxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAb,SAAwCqB,EAAxC,KAAgDC,GAChDzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,gBAA2CoB,EAAKL,QAAQ,GAAxD,SACAlB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,aAA2CuB,GAC3C1B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,WAAwCwB,GACxC3B,EAAAC,EAAAC,cAAC4B,EAAD,CACChB,gBAAiBA,EACjBC,iBAAkBA,EAClBC,mBAAoBA,EACpBC,oBAAqBA,IAEtBjB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQhB,UAAU,oBAAoBkB,QAASQ,EAAiBT,QAAQ,WAAxE,uBAIFpB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkByB,QAtBnCN,EAAA,CAA6BlB,aCCvB2B,EAAS,mCAgHAC,6MA5GdC,MAAQ,CACPV,UAAMW,EACNpB,qBAAiBoB,EACjBnB,sBAAkBmB,EAClBlB,wBAAoBkB,EACpBV,UAAMU,EACNT,aAASS,EACTC,cAAUD,EACVP,YAAQO,EACRN,WAAOM,KAGRjB,oBAAsB,WACrBmB,EAAKC,SAAS,CACbvB,qBAAiBoB,EACjBnB,sBAAkBmB,EAClBlB,wBAAoBkB,OAItB1B,qDAAiB,SAAA8B,EAAOC,GAAP,IAAAf,EAAAgB,EAAAC,EAAAd,EAAAe,EAAAC,EAAA,OAAAC,EAAA3C,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAChBT,EAAEU,mBACIzB,EAAOe,EAAEW,OAAOC,SAAS3B,KAAKzB,OAFpB,CAAA+C,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKQI,MAAK,qDAAAC,OAAsD7B,EAAtD,WAAA6B,OAAoEtB,EAApE,kBALb,cAKTS,EALSM,EAAAQ,KAAAR,EAAAE,KAAA,EAMIR,EAASe,OANb,QAMTd,EANSK,EAAAQ,MAQN5C,MACJiB,EAASc,EAAKe,IAAI7B,QAClBe,EAAO,IAAIe,MACVC,QAAQ/B,GACTgB,EAAaD,EAAKiB,WAAa,IAAMjB,EAAKkB,aAE9CxB,EAAKC,SAAS,CACbd,KAAMkB,EAAKoB,KAAKtC,KAChBC,KAAMiB,EAAK/B,KACXe,QAASgB,EAAKe,IAAI/B,QAClBC,SAAUe,EAAKoB,KAAKnC,SACpBC,OAAQgB,EACRf,WAAOM,KAGRE,EAAKC,SAAS,CACbd,UAAMW,EACNV,UAAMU,EACNT,aAASS,EACTC,cAAUD,EACVP,YAAQO,EACRN,MAAO,mBA7BMkB,EAAAE,KAAA,iBAkCfZ,EAAKC,SAAS,CACbd,UAAMW,EACNV,UAAMU,EACNT,aAASS,EACTC,cAAUD,EACVP,YAAQO,EACRN,MAAO,6BAxCO,yBAAAkB,EAAAgB,SAAAxB,8DA6CjBT,sDAAkB,SAAAkC,EAAOxB,GAAP,IAAAf,EAAAgB,EAAAC,EAAA,OAAAG,EAAA3C,EAAA4C,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cACjBT,EAAEU,iBACIzB,EAAOY,EAAKH,MAAMT,KAFPwC,EAAAhB,KAAA,EAIMI,MAAK,sDAAAC,OAAuD7B,EAAvD,WAAA6B,OAAqEtB,EAArE,kBAJX,cAIXS,EAJWwB,EAAAV,KAAAU,EAAAhB,KAAA,EAKER,EAASe,OALX,OAKXd,EALWuB,EAAAV,KAOjBlB,EAAKC,SAAS,CACbvB,gBAAiB2B,EAAKwB,KAAK,GAAGJ,KAAKtC,KACnCR,iBAAkB0B,EAAKwB,KAAK,GAAGJ,KAAKtC,KACpCP,mBAAoByB,EAAKwB,KAAK,GAAGJ,KAAKtC,OAVtB,wBAAAyC,EAAAF,SAAAC,oIAejB,OACC/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAACgE,EAAD,OAEDlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACdH,EAAAC,EAAAC,cAACiE,EAAD,CAAM3D,eAAgBjB,KAAKiB,iBAC3BR,EAAAC,EAAAC,cAACkE,EAAD,CACC7C,KAAMhC,KAAK0C,MAAMV,KACjBT,gBAAiBvB,KAAK0C,MAAMnB,gBAC5BC,iBAAkBxB,KAAK0C,MAAMlB,iBAC7BC,mBAAoBzB,KAAK0C,MAAMjB,mBAC/BQ,KAAMjC,KAAK0C,MAAMT,KACjBC,QAASlC,KAAK0C,MAAMR,QACpBC,SAAUnC,KAAK0C,MAAMP,SACrBC,OAAQpC,KAAK0C,MAAMN,OACnBC,MAAOrC,KAAK0C,MAAML,MAClBC,gBAAiBtC,KAAKsC,gBACtBZ,oBAAqB1B,KAAK0B,gCArGfb,aCIEiE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3E,EAAAC,EAAAC,cAAC0E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0fdb6207.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Info.css';\r\n\r\nexport class Info extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"info\">\r\n\t\t\t\t<h1 className=\"info__title\">Forecast app</h1>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport './Form.css';\r\n\r\nexport class Form extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form className=\"form\" onSubmit={this.props.gettingWeather}>\r\n\t\t\t\t<input type=\"text\" name=\"city\" placeholder=\"Enter your city\" className=\"form__input\"/>\r\n\t\t\t\t<button className=\"form__submit\"></button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport class Forecast extends Component {\r\n\trender() {\r\n\t\tconst { tempOneDayLater, tempTwoDaysLater, tempThreeDaysLater, preventDefaultState } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"forecast\">\r\n\t\t\t\t{tempOneDayLater &&\r\n\t\t\t\t\t<div className=\"forecast__containter\">\r\n\t\t\t\t\t\t<p>Temperature tomorrow: {tempOneDayLater && tempOneDayLater.toFixed(0)}째C</p>\r\n\t\t\t\t\t\t<p>Temperature two days later: {tempTwoDaysLater && tempTwoDaysLater.toFixed(0)}째C</p>\r\n\t\t\t\t\t\t<p>Temperature tree days later: {tempThreeDaysLater && tempThreeDaysLater.toFixed(0)}째C</p>\r\n\t\t\t\t\t\t<Button variant=\"danger\" onClick={preventDefaultState}>Close</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\r\n\t\t\t</div >\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport './Weather.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Forecast } from '../Forecast';\r\n\r\nexport class Weather extends Component {\r\n\trender() {\r\n\t\tconst { temp, city, country, pressure, sunset, error, gettingForecast, tempOneDayLater, tempTwoDaysLater, tempThreeDaysLater, preventDefaultState } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"weather\">\r\n\t\t\t\t{city &&\r\n\t\t\t\t\t<div className=\"weather__container\">\r\n\t\t\t\t\t\t<p className=\"weather__location\">City: {city}, {country}</p>\r\n\t\t\t\t\t\t<p className=\"weather__temp\">Temperature: {temp.toFixed(0)}째C</p>\r\n\t\t\t\t\t\t<p className=\"weather__sunrise\">Pressure: {pressure}</p>\r\n\t\t\t\t\t\t<p className=\"weather__sunset\">Sunset: {sunset}</p>\r\n\t\t\t\t\t\t<Forecast\r\n\t\t\t\t\t\t\ttempOneDayLater={tempOneDayLater}\r\n\t\t\t\t\t\t\ttempTwoDaysLater={tempTwoDaysLater}\r\n\t\t\t\t\t\t\ttempThreeDaysLater={tempThreeDaysLater}\r\n\t\t\t\t\t\t\tpreventDefaultState={preventDefaultState}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button className=\"weather__forecast\" onClick={gettingForecast} variant=\"primary\">Forecast at 3 days</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t}\r\n\t\t\t\t<p className=\"weather__error\">{error}</p>\r\n\t\t\t</div >\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { Info } from './components/Info';\nimport { Form } from './components/Form';\nimport { Weather } from './components/Weather';\n\nconst apiKey = '14c2087fb773349cfd702f4c0f67731c';\n\nclass App extends Component {\n\n\tstate = {\n\t\ttemp: undefined,\n\t\ttempOneDayLater: undefined,\n\t\ttempTwoDaysLater: undefined,\n\t\ttempThreeDaysLater: undefined,\n\t\tcity: undefined,\n\t\tcountry: undefined,\n\t\tpreasure: undefined,\n\t\tsunset: undefined,\n\t\terror: undefined\n\t}\n\n\tpreventDefaultState = () => {\n\t\tthis.setState({\n\t\t\ttempOneDayLater: undefined,\n\t\t\ttempTwoDaysLater: undefined,\n\t\t\ttempThreeDaysLater: undefined,\n\t\t})\n\t}\n\n\tgettingWeather = async (e) => {\n\t\te.preventDefault();\n\t\tconst city = e.target.elements.city.value;\n\n\t\tif (city) {\n\t\t\tconst response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);\n\t\t\tconst data = await response.json();\n\n\t\t\tif (data.name) {\n\t\t\t\tlet sunset = data.sys.sunset;\n\t\t\t\tlet date = new Date();\n\t\t\t\tdate.setTime(sunset);\n\t\t\t\tlet sunsetDate = date.getHours() + ':' + date.getMinutes();\n\n\t\t\t\tthis.setState({\n\t\t\t\t\ttemp: data.main.temp,\n\t\t\t\t\tcity: data.name,\n\t\t\t\t\tcountry: data.sys.country,\n\t\t\t\t\tpressure: data.main.pressure,\n\t\t\t\t\tsunset: sunsetDate,\n\t\t\t\t\terror: undefined\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttemp: undefined,\n\t\t\t\t\tcity: undefined,\n\t\t\t\t\tcountry: undefined,\n\t\t\t\t\tpreasure: undefined,\n\t\t\t\t\tsunset: undefined,\n\t\t\t\t\terror: \"City not found\"\n\t\t\t\t})\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\ttemp: undefined,\n\t\t\t\tcity: undefined,\n\t\t\t\tcountry: undefined,\n\t\t\t\tpreasure: undefined,\n\t\t\t\tsunset: undefined,\n\t\t\t\terror: \"Enter your city, please!\"\n\t\t\t})\n\t\t}\n\t}\n\n\tgettingForecast = async (e) => {\n\t\te.preventDefault();\n\t\tconst city = this.state.city;\n\n\t\tconst response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`);\n\t\tconst data = await response.json();\n\n\t\tthis.setState({\n\t\t\ttempOneDayLater: data.list[0].main.temp,\n\t\t\ttempTwoDaysLater: data.list[1].main.temp,\n\t\t\ttempThreeDaysLater: data.list[2].main.temp\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<div className=\"main\">\n\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t<Info />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t<Form gettingWeather={this.gettingWeather} />\n\t\t\t\t\t\t<Weather\n\t\t\t\t\t\t\ttemp={this.state.temp}\n\t\t\t\t\t\t\ttempOneDayLater={this.state.tempOneDayLater}\n\t\t\t\t\t\t\ttempTwoDaysLater={this.state.tempTwoDaysLater}\n\t\t\t\t\t\t\ttempThreeDaysLater={this.state.tempThreeDaysLater}\n\t\t\t\t\t\t\tcity={this.state.city}\n\t\t\t\t\t\t\tcountry={this.state.country}\n\t\t\t\t\t\t\tpressure={this.state.pressure}\n\t\t\t\t\t\t\tsunset={this.state.sunset}\n\t\t\t\t\t\t\terror={this.state.error}\n\t\t\t\t\t\t\tgettingForecast={this.gettingForecast}\n\t\t\t\t\t\t\tpreventDefaultState={this.preventDefaultState}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}